---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-https
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ ingress_name }}"
  annotations:
    kubernetes.io/ingress.class: "{{ ingress_class }}"
    cert-manager.io/cluster-issuer: "{{ cert_issuer }}"
    # Forces HTTPS
    traefik.ingress.kubernetes.io/router.middlewares: "{{ namespace }}-redirect-https@kubernetescrd"
    # Forces a Permanent (301) redirect
    ingress.kubernetes.io/redirect-permanent: "true"
    # Specifies a regex for which URLs to redirect
    ingress.kubernetes.io/redirect-regex: "^https://www.{{ domain }}/?(.*)"
    # Here is where redirected URLs will end up
    #   Notice the $3, which is the third capture
    #   group from the above regex
    ingress.kubernetes.io/redirect-replacement: "https://{{ domain }}/$1"
spec:
  rules:
    - host: "{{ domain }}"
      http:
        paths:
          - path: /en
            pathType: ImplementationSpecific
            backend:
              service:
                name: web-en
                port: 
                  number: 80
    - host: "{{ domain }}"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: web
                port: 
                  number: 80
    - host: "www.{{ domain }}"
      http:
        paths:
          - path: /en
            pathType: ImplementationSpecific
            backend:
              service:
                name: web-en
                port: 
                  number: 80
    - host: "www.{{ domain }}"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: web
                port: 
                  number: 80
    - host: "{{ journal_domain }}"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: journal
                port: 
                  number: 80
  tls:
    - hosts:
        - "{{ domain }}"
        - "www.{{ domain }}"
      secretName: "{{ domain }}"
    - hosts:
        - "{{ journal_domain }}"
      secretName: "{{ journal_domain_name }}"
